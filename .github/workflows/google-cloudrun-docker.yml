name: Build and Deploy to GCP

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.GCP_REGISTRY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REGISTRY_NAME }}/he1pme
  CONTAINER_NAME: he1pme

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install Java
        run: |
          sudo apt install openjdk-17-jdk openjdk-17-jre
          java --version

      - name: Install Maven
        run: |
          sudo apt-get install -y maven
          mvn -v
          
      - name: Build Jar file
        run: |
          mvn clean install -U
          mvn -B package -Ddiscord.bot.token=${{ secrets.DISCORD_BOT_TOKEN }} -Damazon.aws.region=${{ secrets.AMAZON_AWS_REGION }} -Damazon.aws.accesskey=${{ secrets.AMAZON_AWS_ACCESSKEY }} -Damazon.aws.secretkey=${{ secrets.AMAZON_AWS_SECRETKEY }} -Dtwitch.api.client.id=${{ secrets.TWITCH_API_CLIENT_ID }} -Dtwitch.api.client.secret=${{ secrets.TWITCH_API_CLIENT_SECRET }} -Dyoutube.api.key=${{ secrets.YOUTUBE_API_KEY }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          build-args: |
            DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
            AMAZON_AWS_REGION=${{ secrets.AMAZON_AWS_REGION }}
            AMAZON_AWS_ACCESSKEY=${{ secrets.AMAZON_AWS_ACCESSKEY }}
            AMAZON_AWS_SECRETKEY=${{ secrets.AMAZON_AWS_SECRETKEY }}
            TWITCH_API_CLIENT_ID=${{ secrets.TWITCH_API_CLIENT_ID }}
            TWITCH_API_CLIENT_SECRET=${{ secrets.TWITCH_API_CLIENT_SECRET }}
            YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Google Auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_IAM_SECRET_KEY }}

      - name: Push to Google Artifact Registry
        run: |-
          gcloud auth configure-docker ${{ secrets.GCP_REGISTRY_REGION }}-docker.pkg.dev
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH into GCE instance and start container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo docker stop ${{ env.CONTAINER_NAME }}
            sudo docker rm ${{ env.CONTAINER_NAME }}
            sudo docker images -a | grep '${{ env.IMAGE_NAME }}' | awk '{print $3}' | xargs docker rmi
            sudo docker run -d --name ${{ env.CONTAINER_NAME }} ${{ env.IMAGE_NAME }}:${{ github.sha }}