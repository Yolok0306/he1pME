name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: he1pme
  CONTAINER_NAME: he1pme

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          
      - name: Build Jar with Maven
        run: mvn -B package -Ddiscord.bot.token=${{ secrets.DISCORD_BOT_TOKEN }} -Damazon.aws.region=${{ secrets.AMAZON_AWS_REGION }} -Damazon.aws.accesskey=${{ secrets.AMAZON_AWS_ACCESSKEY }} -Damazon.aws.secretkey=${{ secrets.AMAZON_AWS_SECRETKEY }} -Dtwitch.api.client.id=${{ secrets.TWITCH_API_CLIENT_ID }} -Dtwitch.api.client.secret=${{ secrets.TWITCH_API_CLIENT_SECRET }} -Dyoutube.api.key=${{ secrets.YOUTUBE_API_KEY }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Copy Docker image to GCE instance
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.INSTANCE_NAME }}.c.${{ secrets.PROJECT_ID }}.internal
          username: ${{ secrets.GCE_USERNAME }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${GITHUB_WORKSPACE}/${env.IMAGE_NAME}:${{ github.sha }}
          target: cd /home/${{ secrets.GCE_USERNAME }}/${{ env.CONTAINER_NAME }}/${env.IMAGE_NAME}:${{ github.sha }}

      - name: SSH into GCE instance and start container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.INSTANCE_NAME }}.c.${{ secrets.PROJECT_ID }}.internal
          username: ${{ secrets.GCE_USERNAME }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm ${{ env.CONTAINER_NAME }} || true
            cd /home/${{ secrets.GCE_USERNAME }}/${{ env.CONTAINER_NAME }}/
            sudo docker run -d --name ${{ env.CONTAINER_NAME }} ${env.IMAGE_NAME}:${{ github.sha }}
            